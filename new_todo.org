*Try to clear this everyday when it's done!*

In theory if I work these days I can get about 20-30 hours a week... Not that much, barely as much as a part time job,
however if I do some quality work it is possible I can actually push for a late September Act 1 release.

Since most of the work is at the early stages (in producing Act1, I would've done a good portion of the content phase), the
other acts are going to do asset reuse to avoid the time slog. The idea is we seek a *full* release in November or December.

We are probably starting another project concurrently by the Act1 deadline, since I would be bored if this was all I did, also
I wouldn't be able to learn anything lmao.

(I think for future reference, I should spend much more time on debug infrastructure... Debugging is not just printf and reading some
text. It means having more interactivity with parts of your game engine. Is it more complicated? Yes. Is it a lot of work? Yes... But does
it save a lot of headaches... Most definitely yes. More complicated projects need increasingly powerful tools. Thankfully this thing is on
the complexity level where it's not strictly necessary.)

*NOTE: working on the combat system is an extremely big priority!*
*So while it's okay to tackle minor stuff, I should focus on the combat system and it's flourish (abilities and such, as well as AI.)*


* General Plot Outline
This was the original brainstorming list of stuff that I wanted to revise the story as, and this
looks like it's okay.

- Former Ruler makes pact with devil for power, gets tricked and stripped of everything,
- Given a magical sword that has hidden abilities
- Ruler fights as a mercenary as the devil slowly destroys his nation
- Local lords(kind of tyrants) who had been previously conspiring, take opportunities to seize and hold certain areas around the nation
- Former Ruler has traveled far from his lands as he had been exiled, and now he tries to return for his throne
* General Working Schedule
First row is the day of the week
Second row is whether I'm working
Third row is general overview of task types.
    
| Monday | Tuesday | Wednesday | Thursday             | Friday | Saturday | Sunday      |
| NO     | NO      | MAYBE     | MAYBE(AT NIGHT ONLY) | YES    | YES      | YES(less)   |
| -      | -       | X         | Storyboard Writing   | Coding | Coding   | Coding/Art? |

* Tasks by Days of the Week
** Post- (alpha candidate) Important tasks.
*** TODO Add a more involved animation state system.
While the core animations are dictated by an implicit state animation system, sometimes we need to change things up a bit,
so we will include a separate animation state... state.

I've learned that keeping state is the primary problem that surfaces even mildly complicated games, and the best way to handle that
complexity is to bear wrestle it directly instead of trying to pretend it isn't there.

*** TODO Shopping Confirmation
We need some confirmations to make it better, although for now in the release candidate just to avoid spending time on
the UI, I'll avoid this...
*** TODO Allow the cart to remember which items I'm selecting.
*** TODO Think of doing an art retreat?
I mean some of the art stuff here is strictly necessary, but after we have that strictly necessary art we can
try a little harder to do some more stuff.

Most of the visuals in the release candidate are supposed to merely be passable.

*** TODO Weapon animations!
This is mostly art related, I have to draw some placeholder "guy" animations to use as templates.
*** TODO Combat Sprite Animations
The RC version doesn't have combat sprite animations.
*** TODO ambient affectors (birds, light shafts, clouds, fog)
These are minor, but easy things to program so the game looks less dumb.

Might not do birds, probably just keeping clouds and fog.

These things however do take time and are non-essential.

*** TODO Companion System
While the game didn't originally have companions (in it's current iteration), I've decided to add companions for
Act I and Act II.

(The release candidate will have a slightly editted version of these acts.)

- [ ] Following Companions in the overworld with basic flocking behavior?
- [ ] Selecting where companions spawn on the battlefield when a fight begins
- [ ] Controlling Companions
After most of this we should be in good enough shape to start doing the save system as that would constitute most of the game mechanics.
*** TODO Lots of things need to scroll
now that I think about it the vast majority of stuff needs to be scrollable...
** Later But unspecified
*** TODO Cleanup in the future, remove scale field from entities. They are now redundant.
*** TODO Code cleanup for the API stuff.
*** TODO Scrollable item inventory related stuff
None of the inventory code understands how to scroll but we also don't simply have enough stuff for that to happen!
There's a lot of dirt that needs to be cleaned up at some point.
*** DONE Pathfinding stuck bug.
This happens inconsistently, don't know what the cause of it is right now.
*** TODO Minor shop related bugs.
I suspect as I compress the shop code, it'll fix itself, but it's a little unwieldy.
** Monday
** Tuesday

So it seems like a large majority of the tasks right now are finishing up core engine features, and gameplay mechanics.
While also encouraging a push towards a more data-driven game engine. This is to reduce the strain of producing content, and
obviously while some mechanics and content still has to sort of be hard-coded, a vast majority of the game assets can be
loaded from data and should basically be avaliable on demand.

** Wednesday
Frankly I'm a bit reluctant to allow myself to do *from file* tasks, as data formats are commonly rewritten
really really frequently. However, since some of the data hasn't appeared to change so much it's fine...

Another large thing is that most of these data formats are "schemas", or otherwise have like one source of truth.

It's not like the entries in a save file, which might be very difficult to retroactively upgrade. Item schema changes
and such don't really do anything to save files since the only place those things are referenced are by ID or some smaller
"core essentials" of the data which are basically never updated.

IE: Schema-like data formats are okay to serialize pretty early since while their consequences are far reaching, that's its most
powerful asset.

*** DONE Getting the shop to actually work
We have the UI for the shop system (done last week), but we never actually got it's behavior to work as intended.

Also obviously, I want to animate stuff.
*** DONE Frozen weather?
*** DONE Realign all sprites to be at a central reference point.
All "entity" sprites should be aligned at their feet, and center. Once this code change is made all sprites
should work without manual alignment, so long as they are made following the guy template guidelines. This makes
most of the pixel art extremely easy to work with.
*** DONE Draw Shadows for all entities (NPCs)
*** DONE SDL2 Mixer Audio Backend.
This should be trivial, my audio system should have a very sane design.

*** DONE Adding gold!
** Thursday
NOTE This is most of the major game loop stuff. Once this is done we can start prototyping the game content
almost full speed ahead!

Cause then the game vision stuff will be immediately obvious since we have more game content stuff happening.

(In the interest with the release candidate soft "deadline" (which is either the end of the month or October 9th?)
(which I might not even meet with my inconsistent schedule.)

I need to start culling out unnecessary things or difficult things. Basically if I cannot think of a decent solution very
quickly, I cannot spend time implementing it for the release candidate build because I need to get the rest of the game to work.

So most of the combat animations will be phased out since I just cannot think of a great solution. I'll have to just use bumps and
flashes (which are still going to be present in the full build, we just don't animate the sprite.))

** Friday
*** TODO Projectiles for ranged weapons!
*** TODO Fix the Entity draw order problem!
*** TODO Fix the shop behavior
Since it's been broken as of the last build.
*** DONE Items from Files
Our item formats are probably going to be kept very simple. We're
going to try to constrain what we can and cannot do for the sake
of avoiding scope-creep.

Chrono Trigger in many ways was both a simple and complicated game. Simple
in it's mechanics, complicated with it's execution.

Items don't need to be able to do literally everything. If they need to
do more impressive things, we will handle that when the time comes however
we need to basically only assume a few basica archetypes of items.

*** DONE Tile Data From Files
*** TODO Game Over State/Screen
*** TODO Particle System
*** TODO "Fluid" Obstacles (Liquid Fire/Water/Oil/Acid)
I need to draw and use autotiling for these, but they should be pretty easy...
Also thankfully these only happen on one layer.
*** TODO Enemy AI/Thinking
*** TODO Adding action points into the equation?
*** TODO My end turn is broken.
*** TODO Combat System changes
:LOGBOOK:
CLOCK: [2022-08-27 Sat 15:20]--[2022-08-27 Sat 15:24] =>  0:04
CLOCK: [2022-08-27 Sat 13:27]--[2022-08-27 Sat 15:04] =>  1:37
:END:
These are some more adjustments to the combat system core.

We don't have really many items right now,

I have some of the ability UI done which is very nice I guess. Going to level design later... So I can still get some work that isn't
engine work done.

- [ ] Entity selection with abilities (and highlighting obviously.)
- [ ] Confirmation of ability selection.
- [ ] Also turn investment! (For now I will do pure turn based (just set action points to 0 after each action.))
- [ ] Add the usage of abilities
  I haven't quite figured out the uh, animation problem. Since there
  may be many complexities in the animation. Now anyway this is done
  I have to encode the animations as commands, and that might override
  lots of state. We're not doing that right now.

  We're just going to focus on getting the ability infrastructure to
  work without animations.

  I suspect the animations aren't going to be too difficult to do though.
*** TODO Combat Animations
This thing is actually now going to be inspired by Action Sequences from RPG Maker
- [ ] Ability animation structure
- [ ] Add standard attack animations
  While this technically requires more art, we can animate a violent bump
  for now if we lack any animations otherwise (along with a damage flash).

  This isn't very difficult to do. It will also be the default animation
  if we lack any other type of animation.

*** TODO Entities can drop items at the end of a battle when they die.
We have to have droppable items in the list, and obviously set percentages for drops. This isn't super difficult
and can be specified as part of the entity drop system.
*** TODO Think of cutscenes?
*** TODO Do we have to page assets?
While we may eventually convert all assets into palette bitmaps (Makes recoloring easier anyways), we have to
right now use full color pngs, which are moderately expensive to store in memory. Though thankfully these sprites
are pretty small.
*** TODO Consider adding optional sprite mirroring options.
*** TODO Maybe entity model files?
To avoid hardcoding all the types, and that way once we have most of the game mechanics, we can kind of just
mass produce entities pretty fast.
*** TODO Rewrite the act outlines
I DIDN'T SYNC....
*** TODO Fade out cutscene power
Using for dreamy fade out sequences.

(Screenshot the current framebuffer, then let it fade out into the new scene).
Not very difficult and is a cheap effect I can do.

- [ ] Screenshot current buffer (of the game world, not with UI)
- [ ] Allow fade out

*** TODO Sepia filter.
Might need to figure out how to get this to blend properly with the grayscale filter
tr = 0.393R + 0.769G + 0.189B
tg = 0.349R + 0.686G + 0.168B
tb = 0.272R + 0.534G + 0.131B
*** TODO Parameter adjustable Postprocessing
*** TODO Lighting
We're doing a simple sprite per pixel lighting system. It will likely not obey obstructions to start, but that's okay for now.
Yeah no obstructions, just full screenspace lighting.

Color grading might serve as a minor obstacle as it convolutes the light masking system.

(Probably just going to make an additive light that's going to be clamped...)
*** TODO Level Up Curve
*** TODO Sprite Props/Objects (Generally these are custom scripted objects within the engine. Fun.)
These things don't have to obey tile lock limitations but they can snap to the grid if needed. They are also separated
into layers. These things will be done later, not necessarily needed.
This is going to kind of suck. We do have chests as our only special entity type (okay?) Might need to consider
adding world/doors/obstacles.

I'm probably going to avoid going too ham on the puzzle things and generally design dungeons to be very linear.
*** TODO Level planning,
*** TODO More scenario writing
*** TODO Entities defined from files
*** TODO initial save record work
*** TODO Synopsis Diary System?
** Saturday
** Sunday

* OLD TASK LIST. 
When I'm ready to work today:

Technically this isn't that much, and once this is done, we can get
to work on the story writing (for a week or so, until I have a passable script,
and then produce the game. We may have to revamp the pixel art, which is okay...
Although I want to keep this art for the Act 1 Demo. Possibly for the whole release
but who knows...)

Anyways I've learned, making game tools is extremely important. Also I need to
make tools to make the majority of work extremely convenient.

Most of Wednesday expected work
  
Extra time or the next avaliable work day.
- NPCs from Files
- Allow arbitrary scripts to be associated with a level, to make things easier to test within the editor.
- Allow single command entering (for faster debugging and level testing...)
- Create a scenario (writing.)

Do this stuff (some of it)

Art is most likely to be done on the weekend.

- SDL2 Mixer Audio

- Master Tileset from a file. Want to avoid compiling too much.

- Setup the save record system for save states.

- Check the game variable system to see if it works.

- Particle System (later)
- Lighting (later)


- Maybe find a few days to make some pixel art

- for myself, since I kind of need it... Aligning pixel
  art is going to be a bit of a bitch but, I don't have the tooling
  to facilitate any of it.
- Okay, I do need a testing tileset. Need to draw that today

Open for business on Wednesday, Friday, Saturday, maybe sunday

