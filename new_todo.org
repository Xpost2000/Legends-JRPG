*Try to clear this everyday when I'm done with the tasks for the day?*

Also turns out that hackathon really really fucked me up...

I need to take a bit of time to correct myself by sleeping early. Now I know midterms are
coming up so it's highly unlikely I will even have time to work on this project this week since I kind
of want to study and take it easy until then.

But I think I genuinely need to force myself to work in at least an hour or something before anything else.

* Done
*** DONE Allow the cart to remember which items I'm selecting.
*** DONE Entity ability selection.
*** DONE Fix the Entity draw order problem!
*** DONE Fix the shop behavior
*** DONE Items from Files
Our item formats are probably going to be kept very simple. We're
going to try to constrain what we can and cannot do for the sake
of avoiding scope-creep.

Chrono Trigger in many ways was both a simple and complicated game. Simple
in it's mechanics, complicated with it's execution.

Items don't need to be able to do literally everything. If they need to
do more impressive things, we will handle that when the time comes however
we need to basically only assume a few basica archetypes of items.

*** DONE Tile Data From Files
Since it's been broken as of the last build.
*** DONE (*Focus*DOING)Load the abilities database from abilities.txt
*** DONE (*Focus*DOING) Combat Animations
This thing is actually now going to be inspired by Action Sequences from RPG Maker
- [X] Ability animation structure
- [X] Add standard attack animations
  While this technically requires more art, we can animate a violent bump
  for now if we lack any animations otherwise (along with a damage flash).

  This isn't very difficult to do. It will also be the default animation
  if we lack any other type of animation.
*** DONE Ability Sequences!

These are the biggest mother fuckers! We should also offer the option to do Disgaea style
skipping if possible. I'm probably just going to define the structs and call it a day from
this point.

Since that's one of the painful things since it's almost essentially an arbitrary animation sequence,
which is what kind of concerns me.

*** DONE Camera focus commands
*** DONE Getting the shop to actually work
We have the UI for the shop system (done last week), but we never actually got it's behavior to work as intended.

Also obviously, I want to animate stuff.
*** DONE Frozen weather?
*** DONE Realign all sprites to be at a central reference point.
All "entity" sprites should be aligned at their feet, and center. Once this code change is made all sprites
should work without manual alignment, so long as they are made following the guy template guidelines. This makes
most of the pixel art extremely easy to work with.
*** DONE Draw Shadows for all entities (NPCs)
*** DONE SDL2 Mixer Audio Backend.
This should be trivial, my audio system should have a very sane design.

*** DONE Adding gold!
*** DONE Merge the entity_ability_database with entity_database
*** DONE Entities defined from files
*** DONE (DOING)Entities can drop items at the end of a battle when they die.
We have to have droppable items in the list, and obviously set percentages for drops. This isn't super difficult
and can be specified as part of the entity drop system.
*** DONE Scissor buffer
*** DONE (DOING) Serializing of loot tables (from a file)
*** DONE Define Ability Sequences structures
*** DONE Pathfinding stuck bug.
This happens inconsistently, don't know what the cause of it is right now.
*** DONE Minor shop related bugs.
I suspect as I compress the shop code, it'll fix itself, but it's a little unwieldy.
As soon as I know my data, the code instantly becomes very obvious.
*** DONE BIGFILE with uncompressed files
* Tasks by Days of the Week
** Almost before alpha candidate release
Basically a small bug witch hunt.
*** TODO Fix UI state bugs, sometimes we suddenly jump state when I'm not supposed to.
*** TODO Better input handling for gamepad
I've just been hijacking controller input code cause I fucking lazy.
** Pure development convenience stuff
*** TODO Metaprogram script function binding generation
*** TODO Metaprogram serialization stuff
** Post- (alpha candidate) Important tasks.
*** TODO Add a more involved animation state system.
While the core animations are dictated by an implicit state animation system, sometimes we need to change things up a bit,
so we will include a separate animation state... state.

I've learned that keeping state is the primary problem that surfaces even mildly complicated games, and the best way to handle that
complexity is to bear wrestle it directly instead of trying to pretend it isn't there.

*** TODO Shopping Confirmation
We need some confirmations to make it better, although for now in the release candidate just to avoid spending time on
the UI, I'll avoid this...
*** TODO Think of doing an art retreat?
I mean some of the art stuff here is strictly necessary, but after we have that strictly necessary art we can
try a little harder to do some more stuff.

Most of the visuals in the release candidate are supposed to merely be passable.

*** TODO Weapon animations!
This is mostly art related, I have to draw some placeholder "guy" animations to use as templates.
*** TODO Combat Sprite Animations
The RC version doesn't have combat sprite animations.
*** TODO ambient affectors (birds, light shafts, clouds, fog)
These are minor, but easy things to program so the game looks less dumb.

Might not do birds, probably just keeping clouds and fog.

These things however do take time and are non-essential.

*** TODO Companion System
While the game didn't originally have companions (in it's current iteration), I've decided to add companions for
Act I and Act II.

(The release candidate will have a slightly editted version of these acts.)

- [ ] Following Companions in the overworld with basic flocking behavior?
- [ ] Selecting where companions spawn on the battlefield when a fight begins
- [ ] Controlling Companions
After most of this we should be in good enough shape to start doing the save system as that would constitute most of the game mechanics.
*** TODO Lots of things need to scroll
now that I think about it the vast majority of stuff needs to be scrollable...
** Later But unspecified
*** TODO Enemy AI/Thinking
*** TODO Adding action points into the equation?
*** TODO Think of cutscenes?
*** TODO Do we have to page assets?
While we may eventually convert all assets into palette bitmaps (Makes recoloring easier anyways), we have to
right now use full color pngs, which are moderately expensive to store in memory. Though thankfully these sprites
are pretty small.
*** TODO Maybe entity model files?
To avoid hardcoding all the types, and that way once we have most of the game mechanics, we can kind of just
mass produce entities pretty fast.
*** TODO Rewrite the act outlines
I DIDN'T SYNC....
*** TODO Fade out cutscene power
Using for dreamy fade out sequences.

(Screenshot the current framebuffer, then let it fade out into the new scene).
Not very difficult and is a cheap effect I can do.

- [ ] Screenshot current buffer (of the game world, not with UI)
- [ ] Allow fade out

*** TODO Sepia filter.
Might need to figure out how to get this to blend properly with the grayscale filter
tr = 0.393R + 0.769G + 0.189B
tg = 0.349R + 0.686G + 0.168B
tb = 0.272R + 0.534G + 0.131B
*** TODO Parameter adjustable Postprocessing
*** TODO Sprite Props/Objects (Generally these are custom scripted objects within the engine. Fun.)
All objects are probably going to be hard coded within the engine to avoid me having to do super complicated things.

While most of the engine is data driven, this might be one of the few things that I cannot data drive... I mean I could implement
script functionality but that's not worth it. I'd rather just hardcode that kind of stuff into the engine, since it allows me to do
much more with the editor behavior.
*** TODO Level planning,
*** TODO More scenario writing
*** TODO initial save record work
*** TODO Synopsis Diary System?
*** TODO Cleanup in the future, remove scale field from entities. They are now redundant.
*** TODO Code cleanup for the API stuff.
*** TODO Scrollable item inventory related stuff
None of the inventory code understands how to scroll but we also don't simply have enough stuff for that to happen!
There's a lot of dirt that needs to be cleaned up at some point.
*** TODO More data error handling
There is basically no error handling code for any of our data formats, so even if we crash we don't
know what went wrong which is pretty bad imo.
** Monday
We'll probably just do this at night or something.
** Tuesday

** Wednesday
** Thursday
** Friday
** Saturday

I need some other stuff as well.

Particle systems and lights are going to be very good.

*** TODO (?)Fix DPI scaling
*** TODO Hurt should actually do stuff
*** TODO (*Focus* DOING)Polish up the battle victory screen & Loot Table needs to reward the winner lol.
*** TODO (EDITOR?NOT NOW) Better Entity selection
*** TODO Level Up Curve
*** TODO Make game state variables ("dynamic?")
We may need to anticipate more than some fixed size amount, so we should make sure it has the ability
to expand. So we'll have to program some way of storing them and increasing them.
*** TODO Consider thinking about the save menu
Implement save load style. Save records aren't used yet, but we need to verify the systems' effectiveness. Thankfully some
records should be pretty simple to implement though we just need to implement some basic record loading such as looted chests
and killed entities. Those are likely to stay. We just need a way to flag entities as kill count appearances.
*** TODO Projectiles for ranged weapons!
*** TODO Game Over State/Screen
*** TODO Visible weapon sprites!
Not strictly necessary and requires more drawing. Alls of these are two frames.
*** TODO (????MAYBE)"Fluid" Obstacles (Liquid Fire/Water/Oil/Acid)
I need to draw and use autotiling for these, but they should be pretty easy...
Also thankfully these only happen on one layer.

*** TODO Burning! Poison/DT effects
If a charater is burnable we use this to spawn a burning particle effect or poison bubble effect and have them die to it.
Flames will burn very aggressively and emit light as well.

When dying while burning is active entities will collapse into ashes. (Okay that would be the idea but for now they'll die the normal way or
they'll play a random shaking animation (left and right), and then do the normal death animation which involves kneeling.)

We have to guarantee the engine will always support enough lights to contain the amount of entities that are present as well as particle emitters.
IE: This means that the level must always allocate these particle emitters and lights for each possible entity that these effects can appear on so as to
avoid not crashing... They will be added as a separate linked pool that we can harvest from.
*** TODO (DOING)Particle System
*** TODO (DOING)My end turn is broken.
*** TODO (DOING)Item Use menu in the battle UI.
Mostly just for healing items for now.
*** TODO (?) Ability filtering
*** TODO (*Focus*DOING) Combat System changes
:LOGBOOK:
CLOCK: [2022-08-27 Sat 15:20]--[2022-08-27 Sat 15:24] =>  0:04
CLOCK: [2022-08-27 Sat 13:27]--[2022-08-27 Sat 15:04] =>  1:37
:END:
These are some more adjustments to the combat system core.

We don't have really many items right now,

I have some of the ability UI done which is very nice I guess. Going to level design later... So I can still get some work that isn't
engine work done.

- [X] Entity selection with abilities (and highlighting obviously.)
- [ ] Make it more Disgaea like (action is queued up, and we can undo movement and such if they haven't been executed)
  This is after everything is confirmed to already work.
- [ ] Confirmation of ability selection.
- [ ] Also turn investment! (For now I will do pure turn based (just set action points to 0 after each action.))
- [ ] Add the usage of abilities
  I haven't quite figured out the uh, animation problem. Since there
  may be many complexities in the animation. Now anyway this is done
  I have to encode the animations as commands, and that might override
  lots of state. We're not doing that right now.

  We're just going to focus on getting the ability infrastructure to
  work without animations.

  I suspect the animations aren't going to be too difficult to do though.

** Sunday
This is a pretty massive list, but at least it's a narrowed one so I actually
know what the fuck I'm trying to do.

I think it's a good idea to do 2-3 things on these lists a day, or at least try
to do that much.

It's a decent amount of progress imo.

